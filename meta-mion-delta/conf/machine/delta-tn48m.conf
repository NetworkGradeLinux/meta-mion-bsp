#@TYPE: Machine
#@NAME: delta-tn48m 

#@DESCRIPTION: Machine configuration for delta-tn48m systems

require conf/platform-profiles/platform-delta.inc

DEFAULTTUNE ?= "aarch64"

require conf/machine/include/arm/arch-armv8a.inc

TUNEVALID[aarch64] = "Enable instructions for aarch64"

MACHINEOVERRIDES .= "${@bb.utils.contains('TUNE_FEATURES', 'aarch64', ':aarch64', '' ,d)}"

# Little Endian base configs
AVAILTUNES += "aarch64 aarch64_be"
ARMPKGARCH_tune-aarch64 ?= "aarch64"
ARMPKGARCH_tune-aarch64_be ?= "aarch64_be"
TUNE_FEATURES_tune-aarch64 = "aarch64"
TUNE_FEATURES_tune-aarch64_be = "${TUNE_FEATURES_tune-aarch64} bigendian"
BASE_LIB_tune-aarch64 = "lib64"
BASE_LIB_tune-aarch64_be = "lib64"

PACKAGE_EXTRA_ARCHS_tune-aarch64 = "aarch64"
PACKAGE_EXTRA_ARCHS_tune-aarch64_be = "aarch64_be"

ARMPKGSFX_ENDIAN_64 = "${@bb.utils.contains('TUNE_FEATURES', 'bigendian', '_be', '', d)}"
TUNE_ARCH_64 = "aarch64${ARMPKGSFX_ENDIAN_64}"
TUNE_PKGARCH_64 = "aarch64${ARMPKGSFX_ENDIAN_64}"
ABIEXTENSION_64 = ""
TARGET_FPU_64 = ""

# Duplicated from marvell-arch-arm.inc
TUNE_ARCH_32 = "${@bb.utils.contains('TUNE_FEATURES', 'bigendian', 'armeb', 'arm', d)}"
TUNE_PKGARCH_32 = "${ARMPKGARCH}${ARMPKGSFX_THUMB}${ARMPKGSFX_DSP}${ARMPKGSFX_EABI}${ARMPKGSFX_ENDIAN}${ARMPKGSFX_FPU}"
ABIEXTENSION_32 = "eabi"
TARGET_FPU_32 = "${@d.getVar('TUNE_CCARGS_MFLOAT', True) or 'soft'}"

TUNE_ARCH = "${@bb.utils.contains('TUNE_FEATURES', 'aarch64', '${TUNE_ARCH_64}', '${TUNE_ARCH_32}' ,d)}"
TUNE_PKGARCH = "${@bb.utils.contains('TUNE_FEATURES', 'aarch64', '${TUNE_PKGARCH_64}', '${TUNE_PKGARCH_32}' ,d)}"
ABIEXTENSION = "${@bb.utils.contains('TUNE_FEATURES', 'aarch64', '${ABIEXTENSION_64}', '${ABIEXTENSION_32}' ,d)}"
TARGET_FPU = "${@bb.utils.contains('TUNE_FEATURES', 'aarch64', '${TARGET_FPU_64}', '${TARGET_FPU_32}' ,d)}"

PREFERRED_PROVIDER_virtual/kernel ?= "linux-yocto"
PREFERRED_VERSION_linux-yocto ?= "5.10%"

MACHINE_ENDIANNESS ?= "le"

DEFAULTTUNE_armada70xx ?= "${@bb.utils.contains("MACHINE_ENDIANNESS", "le", "aarch64", "aarch64_be", d)}"

MACHINEOVERRIDES =. "tn48m:"

#PREFERRED_PROVIDER_u-boot-script ??= "u-boot-script-marvell"

SERIAL_CONSOLE = "115200 ttyS0"

MACHINE_FEATURES = "ext2 ipsec nfs pci smbfs usbgadget usbhost vfat"

MACHINE_FEATURES_BACKFILL_CONSIDERED += "${@bb.utils.contains("MACHINE_ENDIANNESS", "be", "qemu-usermode", "", d)}"

KERNEL_DEVICETREE = " \
    marvell/delta-tn48m.dtb \
"

KERNEL_CLASSES += "kernel-fitimage"
KERNEL_IMAGETYPES = "Image fitImage"
KERNEL_IMAGETYPE = "Image"
INITRAMFS_MAXSIZE = "520000"
INITRAMFS_IMAGE_BUNDLE = "1"
INITRAMFS_IMAGE = "mion-onie-image-dent-initramfs"

UBOOT_ENTRYPOINT = "0x400000"
UBOOT_LOADADDRESS = "0x400000"

UBOOT_CONFIG = "armada-7040"

MACHINE_EXTRA_RRECOMMENDS = "kernel-modules"

EXTRA_IMAGEDEPENDS += "u-boot"

#IMAGE_INSTALL_append = " kernel-devicetree kernel-image-fitimage"

KERNEL_EXTRA_ARGS += "LOADADDR=${UBOOT_ENTRYPOINT}"

SERIAL_CONSOLES ?= "115200;ttyAMA0 115200;hvc0"
SERIAL_CONSOLES_CHECK = "${SERIAL_CONSOLES}"

GLIBC_ADDONS = "nptl"

ONIE_VENDOR="delta"

# Baseboard config, we don't load them as baseboard conf does the insmod
MACHINEOVERRIDES =. "delta-tn48m"

UBOOT_DEVICE_TREE = "armada-7040-db"

MACHINE_EXTRA_RRECOMMENDS += "kernel-modules"

